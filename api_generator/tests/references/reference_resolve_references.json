{
  "test_schema": [
    {
      "common.json": {
        "non_empty_string": {
          "type": "string",
          "minLength": 1,
          "clientMinLength": 1
        },
        "color": {
          "type": "string",
          "format": "color"
        },
        "url": {
          "type": "string",
          "format": "uri"
        },
        "positive_integer": {
          "type": "integer",
          "constraint": "number > 0"
        },
        "non_negative_integer": {
          "type": "integer",
          "constraint": "number >= 0"
        },
        "boolean_int": {
          "type": "integer",
          "enum": [
            0,
            1
          ],
          "format": "boolean"
        }
      }
    },
    {
      "entity.json": {
        "anyOf": [
          {
            "$resolved_refs": [
              "entity_with_array.json"
            ],
            "type": "$defined_entity_with_array"
          },
          {
            "$resolved_refs": [
              "entity_with_array_of_nested_items.json"
            ],
            "type": "$defined_entity_with_array_of_nested_items"
          },
          {
            "$resolved_refs": [
              "entity_with_array_with_transform.json"
            ],
            "type": "$defined_entity_with_array_with_transform"
          },
          {
            "$resolved_refs": [
              "entity_with_complex_property.json"
            ],
            "type": "$defined_entity_with_complex_property"
          },
          {
            "$resolved_refs": [
              "entity_with_complex_property_with_default_value.json"
            ],
            "type": "$defined_entity_with_complex_property_with_default_value"
          },
          {
            "$resolved_refs": [
              "entity_with_entity_property.json"
            ],
            "type": "$defined_entity_with_entity_property"
          },
          {
            "$resolved_refs": [
              "entity_with_optional_complex_property.json"
            ],
            "type": "$defined_entity_with_optional_complex_property"
          },
          {
            "$resolved_refs": [
              "entity_with_optional_property.json"
            ],
            "type": "$defined_entity_with_optional_property"
          },
          {
            "$resolved_refs": [
              "entity_with_optional_string_enum_property.json"
            ],
            "type": "$defined_entity_with_optional_string_enum_property"
          },
          {
            "$resolved_refs": [
              "entity_with_property_with_default_value.json"
            ],
            "type": "$defined_entity_with_property_with_default_value"
          },
          {
            "$resolved_refs": [
              "entity_with_required_property.json"
            ],
            "type": "$defined_entity_with_required_property"
          },
          {
            "$resolved_refs": [
              "entity_with_simple_properties.json"
            ],
            "type": "$defined_entity_with_simple_properties"
          },
          {
            "$resolved_refs": [
              "entity_with_strict_array.json"
            ],
            "type": "$defined_entity_with_strict_array"
          },
          {
            "$resolved_refs": [
              "entity_with_string_array_property.json"
            ],
            "type": "$defined_entity_with_string_array_property"
          },
          {
            "$resolved_refs": [
              "entity_with_string_enum_property.json"
            ],
            "type": "$defined_entity_with_string_enum_property"
          },
          {
            "$resolved_refs": [
              "entity_with_string_enum_property_with_default_value.json"
            ],
            "type": "$defined_entity_with_string_enum_property_with_default_value"
          },
          {
            "$resolved_refs": [
              "entity_without_properties.json"
            ],
            "type": "$defined_entity_without_properties"
          }
        ]
      }
    },
    {
      "entity_with_array.json": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "entity_with_array"
            ]
          },
          "array": {
            "type": "array",
            "items": {
              "$resolved_refs": [
                "entity.json"
              ],
              "type": "$defined_entity"
            },
            "minItems": 1,
            "clientMinItems": 1
          }
        },
        "required": [
          "type",
          "array"
        ]
      }
    },
    {
      "entity_with_array_of_nested_items.json": {
        "type": "object",
        "definitions": {
          "item": {
            "type": "object",
            "properties": {
              "property": {
                "$resolved_refs": [
                  "common.json#/non_empty_string"
                ],
                "type": "string",
                "minLength": 1,
                "clientMinLength": 1
              },
              "entity": {
                "$resolved_refs": [
                  "entity.json"
                ],
                "type": "$defined_entity"
              }
            },
            "required": [
              "property",
              "entity"
            ]
          }
        },
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "entity_with_array_of_nested_items"
            ]
          },
          "items": {
            "type": "array",
            "items": {
              "$resolved_refs": [
                "#/definitions/item"
              ],
              "type": "object",
              "properties": {
                "property": {
                  "$resolved_refs": [
                    "common.json#/non_empty_string"
                  ],
                  "type": "string",
                  "minLength": 1,
                  "clientMinLength": 1
                },
                "entity": {
                  "$resolved_refs": [
                    "entity.json"
                  ],
                  "type": "$defined_entity"
                }
              },
              "required": [
                "property",
                "entity"
              ],
              "$typename": "item"
            },
            "minItems": 1,
            "clientMinItems": 1
          }
        },
        "required": [
          "type",
          "items"
        ]
      }
    },
    {
      "entity_with_array_with_transform.json": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "entity_with_array_with_transform"
            ]
          },
          "array": {
            "type": "array",
            "items": {
              "$resolved_refs": [
                "common.json#/color"
              ],
              "type": "string",
              "format": "color"
            },
            "minItems": 1,
            "clientMinItems": 1
          }
        },
        "required": [
          "type",
          "array"
        ]
      }
    },
    {
      "entity_with_complex_property.json": {
        "type": "object",
        "definitions": {
          "complex_property": {
            "type": "object",
            "properties": {
              "value": {
                "$resolved_refs": [
                  "common.json#/url"
                ],
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "value"
            ]
          }
        },
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "entity_with_complex_property"
            ]
          },
          "property": {
            "$resolved_refs": [
              "#/definitions/complex_property"
            ],
            "type": "object",
            "properties": {
              "value": {
                "$resolved_refs": [
                  "common.json#/url"
                ],
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "value"
            ],
            "$typename": "complex_property"
          }
        },
        "required": [
          "type",
          "property"
        ]
      }
    },
    {
      "entity_with_complex_property_with_default_value.json": {
        "type": "object",
        "definitions": {
          "complex_property": {
            "type": "object",
            "properties": {
              "value": {
                "type": "string"
              }
            },
            "required": [
              "value"
            ]
          }
        },
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "entity_with_complex_property_with_default_value"
            ]
          },
          "property": {
            "default_value": "{ \"value\": \"Default text\" }",
            "$resolved_refs": [
              "#/definitions/complex_property"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "string"
              }
            },
            "required": [
              "value"
            ],
            "$typename": "complex_property"
          }
        },
        "required": [
          "type"
        ]
      }
    },
    {
      "entity_with_entity_property.json": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "entity_with_entity_property"
            ]
          },
          "entity": {
            "default_value": "{ \"type\": \"entity_with_string_enum_property\", \"property\": \"second\" }",
            "$resolved_refs": [
              "entity.json"
            ],
            "type": "$defined_entity"
          }
        },
        "required": [
          "type"
        ]
      }
    },
    {
      "entity_with_optional_complex_property.json": {
        "type": "object",
        "definitions": {
          "complex_property": {
            "type": "object",
            "properties": {
              "value": {
                "$resolved_refs": [
                  "common.json#/url"
                ],
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "value"
            ]
          }
        },
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "entity_with_optional_complex_property"
            ]
          },
          "property": {
            "$resolved_refs": [
              "#/definitions/complex_property"
            ],
            "type": "object",
            "properties": {
              "value": {
                "$resolved_refs": [
                  "common.json#/url"
                ],
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "value"
            ],
            "$typename": "complex_property"
          }
        },
        "required": [
          "type"
        ]
      }
    },
    {
      "entity_with_optional_property.json": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "entity_with_optional_property"
            ]
          },
          "property": {
            "$resolved_refs": [
              "common.json#/non_empty_string"
            ],
            "type": "string",
            "minLength": 1,
            "clientMinLength": 1
          }
        },
        "required": [
          "type"
        ]
      }
    },
    {
      "entity_with_optional_string_enum_property.json": {
        "type": "object",
        "definitions": {
          "string_enum_property": {
            "type": "string",
            "enum": [
              "first",
              "second"
            ]
          }
        },
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "entity_with_optional_string_enum_property"
            ]
          },
          "property": {
            "$resolved_refs": [
              "#/definitions/string_enum_property"
            ],
            "type": "string",
            "enum": [
              "first",
              "second"
            ],
            "$typename": "string_enum_property"
          }
        },
        "required": [
          "type"
        ]
      }
    },
    {
      "entity_with_property_with_default_value.json": {
        "type": "object",
        "definitions": {
          "int_prop": {
            "default_value": "0",
            "$resolved_refs": [
              "common.json#/non_negative_integer"
            ],
            "type": "integer",
            "constraint": "number >= 0"
          },
          "url_prop": {
            "schemes": [
              "https"
            ],
            "default_value": "https://yandex.ru",
            "$resolved_refs": [
              "common.json#/url"
            ],
            "type": "string",
            "format": "uri"
          },
          "nested": {
            "type": "object",
            "properties": {
              "int": {
                "$resolved_refs": [
                  "#/definitions/int_prop",
                  "common.json#/non_negative_integer"
                ],
                "default_value": "0",
                "type": "integer",
                "constraint": "number >= 0"
              },
              "url": {
                "$resolved_refs": [
                  "#/definitions/url_prop",
                  "common.json#/url"
                ],
                "schemes": [
                  "https"
                ],
                "default_value": "https://yandex.ru",
                "type": "string",
                "format": "uri"
              },
              "non_optional": {
                "type": "string"
              }
            },
            "description": "non_optional is used to suppress auto-generation of default value for object with all-optional fields",
            "required": [
              "non_optional"
            ]
          }
        },
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "entity_with_property_with_default_value"
            ]
          },
          "int": {
            "$resolved_refs": [
              "#/definitions/int_prop",
              "common.json#/non_negative_integer"
            ],
            "default_value": "0",
            "type": "integer",
            "constraint": "number >= 0"
          },
          "url": {
            "$resolved_refs": [
              "#/definitions/url_prop",
              "common.json#/url"
            ],
            "schemes": [
              "https"
            ],
            "default_value": "https://yandex.ru",
            "type": "string",
            "format": "uri"
          },
          "nested": {
            "$resolved_refs": [
              "#/definitions/nested"
            ],
            "type": "object",
            "properties": {
              "int": {
                "$resolved_refs": [
                  "#/definitions/int_prop",
                  "common.json#/non_negative_integer"
                ],
                "default_value": "0",
                "type": "integer",
                "constraint": "number >= 0",
                "$typename": "int_prop"
              },
              "url": {
                "$resolved_refs": [
                  "#/definitions/url_prop",
                  "common.json#/url"
                ],
                "schemes": [
                  "https"
                ],
                "default_value": "https://yandex.ru",
                "type": "string",
                "format": "uri",
                "$typename": "url_prop"
              },
              "non_optional": {
                "type": "string"
              }
            },
            "description": "non_optional is used to suppress auto-generation of default value for object with all-optional fields",
            "required": [
              "non_optional"
            ],
            "$typename": "nested"
          }
        },
        "required": [
          "type"
        ]
      }
    },
    {
      "entity_with_required_property.json": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "entity_with_required_property"
            ]
          },
          "property": {
            "$resolved_refs": [
              "common.json#/non_empty_string"
            ],
            "type": "string",
            "minLength": 1,
            "clientMinLength": 1
          }
        },
        "required": [
          "type",
          "property"
        ]
      }
    },
    {
      "entity_with_strict_array.json": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "entity_with_strict_array"
            ]
          },
          "array": {
            "type": "array",
            "items": {
              "$resolved_refs": [
                "entity.json"
              ],
              "type": "$defined_entity"
            },
            "minItems": 1,
            "clientMinItems": 1,
            "strictParsing": true
          }
        },
        "required": [
          "type",
          "array"
        ]
      }
    },
    {
      "entity_with_string_array_property.json": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "entity_with_string_array_property"
            ]
          },
          "array": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "minItems": 1,
            "clientMinItems": 1
          }
        },
        "required": [
          "type",
          "array"
        ]
      }
    },
    {
      "entity_with_string_enum_property.json": {
        "type": "object",
        "definitions": {
          "string_enum_property": {
            "type": "string",
            "enum": [
              "first",
              "second"
            ]
          }
        },
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "entity_with_string_enum_property"
            ]
          },
          "property": {
            "$resolved_refs": [
              "#/definitions/string_enum_property"
            ],
            "type": "string",
            "enum": [
              "first",
              "second"
            ],
            "$typename": "string_enum_property"
          }
        },
        "required": [
          "type",
          "property"
        ]
      }
    },
    {
      "entity_with_string_enum_property_with_default_value.json": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "entity_with_string_enum_property_with_default_value"
            ]
          },
          "value": {
            "type": "string",
            "enum": [
              "first",
              "second",
              "third"
            ],
            "default_value": "second"
          }
        },
        "required": [
          "type"
        ]
      }
    },
    {
      "entity_without_properties.json": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "entity_without_properties"
            ]
          }
        },
        "required": [
          "type"
        ]
      }
    },
    {
      "entity_with_simple_properties.json": {
        "type": "object",
        "description": "Объект с простыми свойствами.",
        "swift_protocols": "EntityProtocol",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "entity_with_simple_properties"
            ]
          },
          "id": {
            "type": "integer",
            "supports_expressions": false,
            "description": "Идентификатор. Не может содержать выражение."
          },
          "string": {
            "description": "Строка.",
            "platforms": [
              "android",
              "ios",
              "web"
            ],
            "$resolved_refs": [
              "common.json#/non_empty_string"
            ],
            "type": "string",
            "minLength": 1,
            "clientMinLength": 1
          },
          "integer": {
            "type": "integer",
            "description": "Целое число."
          },
          "double": {
            "type": "number",
            "description": "Число с плавающей точкой."
          },
          "boolean": {
            "type": "boolean",
            "description": "Логическое значение."
          },
          "boolean_int": {
            "description": "Логическое значение в числовом формате.",
            "deprecated": true,
            "platforms": [
              "android"
            ],
            "$resolved_refs": [
              "common.json#/boolean_int"
            ],
            "type": "integer",
            "enum": [
              0,
              1
            ],
            "format": "boolean"
          },
          "positive_integer": {
            "description": "Положительное целое число.",
            "platforms": [],
            "$resolved_refs": [
              "common.json#/positive_integer"
            ],
            "type": "integer",
            "constraint": "number > 0"
          },
          "color": {
            "description": "Цвет.",
            "$resolved_refs": [
              "common.json#/color"
            ],
            "type": "string",
            "format": "color"
          },
          "url": {
            "$resolved_refs": [
              "common.json#/url"
            ],
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "type"
        ]
      }
    }
  ]
}
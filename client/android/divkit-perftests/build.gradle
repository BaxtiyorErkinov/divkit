apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId 'com.yandex.divkit.perftests'
        minSdkVersion 21
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName '1.0.0'
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }
}

dependencies {
    implementation project(path: ':div-json')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin"
    implementation "androidx.core:core-ktx:$versions.androidx.core_ktx"

    testImplementation "junit:junit:$versions.junit"

    implementation "com.yandex:pulse:$versions.pulse"
    androidTestImplementation "com.yandex.mobile.perftests:perftests-runner:$versions.perftests"
    androidTestImplementation "androidx.test:runner:$versions.androidx.test"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.androidx.espresso"
    androidTestImplementation "androidx.test.uiautomator:uiautomator:$versions.androidx.uiautomator"
}

task assemblePerfTests() {
    def outputPerfDir = "${rootProject.buildDir}/perf"
    def buildType = "debug"

    doLast {
        def copied = 0
        copy {
            from buildDir
            into outputPerfDir
            include "**/apk/**/divkit-perftests-${buildType}.apk"
            eachFile { file ->
                file.path = "mock-app.apk"
                copied += 1
            }
            includeEmptyDirs = false
        }
        assert copied == 1 && file("$outputPerfDir/mock-app.apk").exists()

        copy {
            from buildDir
            into outputPerfDir
            include "**/apk/androidTest/**/divkit-perftests-$buildType-androidTest.apk"
            eachFile { file ->
                file.path = "tests.apk"
                copied += 1
            }
            includeEmptyDirs = false
        }
        assert copied == 2 && file("$outputPerfDir/tests.apk").exists()
    }

    dependsOn("assembleDebug", "assembleDebugAndroidTest")
}

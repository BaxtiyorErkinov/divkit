service: home
title: Divview

arcanum:
  review:
    auto_assign: true
    required: true
    min_approvers_count: 1
    groups:
      - name: frontend-developers
        roles: frontend_developer
      - name: frontend-build-reviewers
        roles: frontend_build_reviewer

    rules:
      - reviewers:
          - name: frontend-developers
            ship: 1
            assign: 2

      - subpaths: "ci/**, a.yaml, package*, Dockerfile, .*"
        reviewers:
          - name: frontend-build-reviewers
            ship: 1
            assign: 2

  auto_merge:
    enabled: false
    requirements:
      - system: arcanum
        type: comment_issues_closed

      - system: arcanum
        type: st_issue_linked
        data:
          in_commit_message: true

#      - system: divkit/public/site
#        type: svelte check
#        disabling_policy: need_reason
#
#      - system: divkit/public/site
#        type: lint server
#        disabling_policy: need_reason
#
#      - system: divkit/public/site
#        type: lint client
#        disabling_policy: need_reason

shared:
  sandbox: &sandbox
    client_tags: GENERIC & LINUX & SSD & LXC
    container_resource: 3169927765
    dns: dns64

  requirements: &requirements
    cores: 1
    ram: 2 GB
    disk: 2 GB
    sandbox: *sandbox

  config: &config
    arc_mount_config:
      enabled: true

    logs_config:
      stdout_ci_badge: true
      redirect_stderr_to_stdout: true

  secretEnvVars: &secretEnvVars
    secret_environment_variables:
      - key: ARCANUM_API_OAUTH_TOKEN
        secret_spec:
          key: ci.token

      - key: AWS_ACCESS_KEY_ID
        secret_spec:
          key: s3AccessKeyId

      - key: AWS_SECRET_ACCESS_KEY
        secret_spec:
          key: s3AccessSecretKey

      - key: DOCKER_TOKEN
        secret_spec:
          key: docker.token

ci:
  secret: sec-01g4aqhmc3dbftbj8c72h1rc47
  runtime:
    sandbox-owner: HOME

  actions:
    checks:
      title: Checks
      flow: checks
      triggers:
        - on: pr
          into:
            - trunk
            - release-branch

  flows:
    checks:
      title: Checks
      jobs:
        checks:
          title: run checks
          task: common/misc/run_command
          requirements: *requirements

          input:
            config:
              <<: *config
              <<: *secretEnvVars

              cmd_line: |
                set -e
                set -x

                cd ${context.config_info.dir}

                npm ci
                node ./ci/checks.js

    release:
      title: Release
      jobs:
        start:
          task: dummy
          stage: testing

        build:
          title: Сборка
          stage: testing
          needs: start
          task: common/misc/run_command
          requirements: *requirements
          input:
            config:
              <<: *config
              <<: *secretEnvVars

              environment_variables:
                - key: S3_PATH
                  value: "${flow-vars.s3path}"

                - key: VERSION
                  value: "${context.version_info.full}"

              cmd_line: |
                set -e
                set -x

                docker login -u robot-divkit-ci -p "$DOCKER_TOKEN" registry.yandex.net

                cd ${context.config_info.dir}

                npm ci
                cd client && npm ci && npm run production && cd ..

                docker build . --compress --label version="${context.version_info.full}" \
                  -t "registry.yandex.net/divview/${flow-vars.image}:${context.version_info.full}" \
                  --network host
                docker push "registry.yandex.net/divview/${flow-vars.image}:${context.version_info.full}"

                aws --endpoint-url=http://s3.mds.yandex.net s3 cp --recursive \
                  "client/dist/" "s3://${flow-vars.s3path}/${context.version_info.full}"

        deploy-to-testing:
          title: Обновление RC
          stage: testing
          needs:
            - build
          task: common/deploy/create_release
          input:
            config:
              stage_id: ${flow-vars.testing}
              patches:
                - docker:
                    docker_image_ref:
                      deploy_unit_id: divview-test
                      box_id: divview-test
                    image_name: "divview/${flow-vars.image}:${not_null(context.rollback_to_version.full, context.version_info.full)}"

        deploy-to-production:
          title: Обновление продакшна
          stage: deploy
          needs: deploy-to-testing
          task: common/deploy/create_release
          manual:
            enabled: true
            prompt: Катим в продакшн?
          input:
            config:
              stage_id: ${flow-vars.stable}
              patches:
                - docker:
                    docker_image_ref:
                      deploy_unit_id: divview
                      box_id: divview
                    image_name: "divview/${flow-vars.image}:${not_null(context.rollback_to_version.full, context.version_info.full)}"

  releases:
    external:
      title: External Divview
      flow: release
      flow-vars:
        s3path: home-static/divview
        image: external
        testing: divview-external-test
        stable: divview-external
      stages:
        testing:
          title: Testing
        deploy:
          title: Deploy
      branches:
        pattern: releases/mordafrontend/divview-external-${version}
